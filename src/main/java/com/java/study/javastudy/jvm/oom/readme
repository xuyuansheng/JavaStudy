程序计数器 Program Counter Register：
    占很小的一块内存，每个线程独享一个pc
Java虚拟机栈 Java Virtual Machine Stack：
    也是线程私有，生命周期与线程相同。每个Java方法执行时会创建一个栈帧，用于存放局部变量表，操作数栈，动态链接，
    方法出口等信息。一个方法从调用到执行完成就是一个栈帧从入栈到出栈的过程。
本地方法栈 Native Method Stack：
    与虚拟机栈类似，但是本地方法栈是为执行native方法服务的。
Java堆 Java Heap：
    存放的是对象的实际数据。所有线程共享。
方法区 Method Area：
    存储Java的类class文件信息，常量，静态变量，动态编译后的代码等数据
    运行时常量池：方法区的一部分，class文件除了版本、字段、方法、接口等信息外还有一个常量池，存放编译生成的
    各种字面量和符号引用。
直接内存Direct Memory：
    不是运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域，但是这部分被频繁的使用也会内存溢出。
    Java1.4引入了NIO，引入了基于通道（Channel）和缓存（Buffer）的IO方式，直接通过native函数直接分配堆外内存，
    然后通过堆内的引用进行操作，这样避免了在native堆（本地内存）和Java堆中复制数据，提高性能。
